// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3319.MyRobot;

import org.usfirst.frc3319.custom.MecanumPIDGyro;

import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DigitalOutput;
import edu.wpi.first.wpilibj.DigitalSource;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.SPI;
import edu.wpi.first.wpilibj.SendableBase;
import edu.wpi.first.wpilibj.SerialPort;
import edu.wpi.first.wpilibj.SerialPort.Port;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.drive.MecanumDrive;
import edu.wpi.first.wpilibj.Solenoid;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    public static SpeedController driveTrainLeft;
    public static SpeedController driveTrainRight;
    public static SpeedController armLift;
    public static SpeedController armLeft;
    public static SpeedController armRight;
    
    public static void init() {
        
        driveTrainLeft = new Spark(0);
        ((SendableBase) driveTrainLeft).setName("DriveTrain", "leftFront");
        driveTrainLeft.setInverted(true);
        
        driveTrainRight = new Spark(1);
        ((SendableBase) driveTrainRight).setName("DriveTrain", "rightFront");
        driveTrainRight.setInverted(false);
        
        armLift = new Spark(2);
        ((SendableBase) armLift).setName("Arm","lifter");
        armLift.setInverted(false);
	
        armLift = new Spark(3);
        ((SendableBase) armLeft).setName("Arm","leftWheel");
        armLift.setInverted(true);
        
        armLift = new Spark(4);
        ((SendableBase) armRight).setName("Arm","rightWheel");
        armLift.setInverted(false);
		
    }
}
