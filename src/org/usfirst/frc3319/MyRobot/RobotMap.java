// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3319.MyRobot;

import org.usfirst.frc3319.custom.MecanumPIDGyro;

import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DigitalOutput;
import edu.wpi.first.wpilibj.DigitalSource;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.SPI;
import edu.wpi.first.wpilibj.SendableBase;
import edu.wpi.first.wpilibj.SerialPort;
import edu.wpi.first.wpilibj.SerialPort.Port;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.drive.MecanumDrive;
import edu.wpi.first.wpilibj.Solenoid;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    public static SpeedController driveTrainLeftFront;
    public static SpeedController driveTrainRightFront;
    public static SpeedController driveTrainLeftRear;
    public static SpeedController driveTrainRightRear;
    public static MecanumDrive driveTrainMecanumDrive;
	public static ADXRS450_Gyro  gyro;
	public static PIDController gyroController;
	

    public static void init() {
        
        driveTrainLeftFront = new Spark(0);
        ((SendableBase) driveTrainLeftFront).setName("DriveTrain", "leftFront");
        driveTrainLeftFront.setInverted(true);
        
        driveTrainRightFront = new Spark(1);
        ((SendableBase) driveTrainRightFront).setName("DriveTrain", "rightFront");
        driveTrainRightFront.setInverted(false);
        
        driveTrainLeftRear = new Spark(2);
        ((SendableBase) driveTrainLeftRear).setName("DriveTrain", "leftRear");
        driveTrainLeftRear.setInverted(true);
        
        driveTrainRightRear = new Spark(3);
        ((SendableBase) driveTrainRightRear).setName("DriveTrain", "rightRear");
        driveTrainRightRear.setInverted(false);
        
        driveTrainMecanumDrive = new MecanumDrive(driveTrainLeftFront, driveTrainLeftRear,
              driveTrainRightFront, driveTrainRightRear);
        
        ((SendableBase) driveTrainMecanumDrive).setName("DriveTrain", "Mecanum Drive");
        driveTrainMecanumDrive.setSafetyEnabled(true);
        driveTrainMecanumDrive.setExpiration(0.1);
        driveTrainMecanumDrive.setMaxOutput(1.0);
      
        
        gyro = new  ADXRS450_Gyro();
        ((SendableBase) gyro).setName("DriveTrain","Gyro");
        
        gyroController = new PIDController(0.5, 0, 2.0, gyro, new MecanumPIDGyro(driveTrainMecanumDrive));
        ((SendableBase) gyroController).setName("DriveTrain", "gyroController");
        
    }
}
